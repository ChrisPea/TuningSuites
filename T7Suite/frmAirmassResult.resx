<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAEAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACIhIwcgHyMnIB8jOiAfIzsgHyM7IB8jOyAfIzsgHyM7IB8jOyAf
        IzsgHyM7IB8jOiAfIyckIiQHAAAAACcmKAdCPjhsq5xq28mzae7KtGvvyrRr78eya+/EsGvvxLJ178e1
        de/KtGvvyrRr78izbO6rm2TdS0Y6cS4sKwc2My4u4MZ38fHZjv/ty17/7clV/+3JVf/v0XL/8NmV//DU
        f//tzmz/7clV/+3JVf/szm7/6tOQ/9zEe/JFPjA0c2Iya/HEQv/xxEL/8cVC//LHTf/xxUP/8cRC//HF
        Qv/xxEP/8cRD//HEQv/yx03/8cRC//HEQv/xxUL/hnI7dHhgKnLmsTD/5rEw/+axMP/ot0D/5rEx/+ax
        MP/msTD/5rEw/+axMP/msTD/6LdB/+axMP/msTD/5rEw/41zN31zWi1y26M3/9ujN//bozf/36pG/9uj
        OP/bozj/26M3/9ujN//bozf/26I3/9+qRv/bozf/26M3/9ujN/+IbDp9cFYwctSZPv/UmT//1Jk+/9mh
        TP/UmT//1Jk+/9SZPv/UmT7/1Jk+/9SYPv/Zok3/1Jk+/9SZPv/UmT//hGc9fmxcSWrfuY3/37aD/9CU
        Rv/VnlT/0JRH/9WgWv/jwZf/0ppR/9CUR//QlEb/1Z5V/9CVSP/etYH/0ZZK/4JkQH1iQi5ytGw5/8GF
        W//ds4X/4LqN/+PBmv/kwpv/woBA/+XDmv/Wn1n/16Rm/+TCm//fuI3/wYVZ/9+4jv+BY0R9ZEQvcsOC
        Rf/NkEv/4bqK/+rMp//WomP/2KZq/9CVTv/guIj/5LuG/+vOqf/kv5L/4r2Q/82RTP/hvZj/dl5Ic3FZ
        P3LYo2P/2KNj/9ijY//drXT/2KNj/9ijY//Yo2P/2aRl/+7Wuf/rz63/3a51/9ijY//Yo2P/4LWB/4Fy
        ZXJ0X0pw37B6/9+wev/fsHr/47mK/9+we//fsHr/37B6/9+wev/lv5X/4reG/+O6i//fsHr/37B6/9+w
        ev+HcVl6dWRTbeS7kP/ku5D/5LuQ/+jEnv/ku5H/5LuQ/+S7kP/ku5D/5LuQ/+S7kP/oxJ7/5LuQ/+S7
        kP/ku5D/iXVieIl4aV/oxqX/6Mal/+jGpf/rzbH/6Mam/+jGpf/oxqX/6Mal/+jGpf/oxqX/682x/+jG
        pf/oxqX/6Mal/5+LeGuxnY0Y6s+67uzRvP/s0bz/79fE/+zRvP/s0bz/7NG8/+zRvP/s0bz/7NG8/+/X
        xf/s0bz/7NG8/+rQuvTFr5wgAAAAAN/MvTfv3NC58d7Tz/Dd08/x3dPP8d3Tz/Dd08/x3tPP8d7Tz/Hd
        08/w3dPP8N3Tz+/c0b7m0sQ+AAAAAIABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIABAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAISAjASAfIwUgHyINIB8jESAfIxIgHyMSIB8jEiAfIxIgHyMSIB8jEiAf
        IxIgHyMSIB8jEiAfIxIgHyMSIB8jEiAfIxIgHyMSIB8jEiAfIxIgHyMSIB8jEiAfIxEgHyMNICAjBQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACclJgQhICMXIB8jOCAfI1QgHyNiIB8jZCAfI2UgHyNlIB8jZSAf
        I2UgHyNlIB8jZSAfI2UgHyNlIB8jZSAfI2UgHyNlIB8jZSAfI2UgHyNlIB8jZSAfI2UgHyNkIB8jYiAf
        I1QgHyM4IiAkFywpJwQAAAAAAAAAAAAAAAArKSoEISAjIh8eI1xSTD2hintHz6qaZ96qm2ffqptn36qb
        Z9+qm2ffqptn36qbZ9+qm2jfqpto36qbaN+qm2jfo5JX36GRVN+qm2ffqptn36qbZ9+qm2ffqptn36qb
        Z9+qm2felohc0VxVQ6UhICRcIiEkITQxLgQAAAAAAAAAACMiJRciISRdppp11ufNdP/q3K7/6Mtn/+rO
        b//qzm//6s5v/+rOb//qzm//6s1u/9/FcP/cwGP/4cl5/97Jgv/m05X/6Nqv/+rNa//qzm//6s5v/+rO
        b//qzm//6s5v/+HHcv/eyof/3sNp/7epd+ExLitkJSQmFwAAAAA0MCsFIB8jOKqgg8rz35v/7deR//Pm
        v//pznT/68pe/+vKXv/syl7/7Mpe/+zKXv/syl7/8uKx/+revf/z36D/89+g/+vZn//r2aL/68lb/+vK
        X//syl7/7Mpf/+zKXv/ryl7/5s2B/+XUov/w4rb/49Cc/66igs4iISU6QTsvBTQwKQ1QS0Jv8tBk/vDL
        Wf/z25H/78tY//DMXP/uyEz/78dM/+7HTP/uyEz/7shM/+7HTP/x0W7/8dyb//DMXP/wzFz/8M5g//HQ
        af/uyEz/7shM/+7ITP/ux0z/78hM/+7ITP/y2Y3/4syP/+/LWv/x0Gn/7s1m/HJkP4Q+OSwNLysmEaqT
        UbbzzFv/88xc//PLWv/zzFz/88xb//PLXP/zzFz/88xf//PMXP/zzFv/88xc//PMW//zzFr/88xc//PM
        XP/yzFz/88xc//PMXP/zzFz/88xc//PMX//zzFz/88xc//PLW//zy1r/88xc//PMW//zzFz/xKhbyjYx
        KBEzLiYSwZsr0u+9Kf/vvSn/770p/++9Kf/vvin/770p/++9Kv/yx0//770r/+++Kv/vvSr/770p/+++
        Kf/vvSn/7r0q/++9Kv/vvSr/770p/++9Kf/uvSn/88dP/+69Kf/uvSn/770p/+++Kf/uvSr/770p/+++
        Kf/ku0LlOjQnETUvJRK9lS/S6bUu/+m1Lv/ptS7/6bUu/+m1Lv/ptS//6bUu/+3AUP/ptTD/6bUu/+m1
        Lv/ptS7/6bUu/+m1L//ptS7/6LUu/+m1L//ptS7/6bUv/+i1Lf/uwFH/6LUu/+m1Lv/ptS7/6bUu/+m1
        Lv/ptS7/6bUu/+C1Rug8NCcRNS4kEriOMtLjrTL/460y/+OtMv/jrTL/460y/+OtMv/jrTH/6blR/+Ot
        M//jrTL/460y/+OtMv/jrTL/460y/+OtMv/jrTL/460y/+OtMv/jrTL/460x/+m6Uv/jrTL/460y/+Ot
        Mv/jrTL/460y/+OtMv/jrTL/3K5I6Ds0JhE0LiUStIkz0t2lNf/epjX/3qY1/92mNf/dpjX/3qY1/96l
        Nf/ltFP/3qY3/96mNv/dpTb/3aY2/96mNf/dpjX/3qY1/92mNf/dpjX/3qY1/92lNf/dpTT/5bRU/96m
        Nf/dpjX/3qY1/96mNf/dpjX/3qY1/96mNf/YqEvpOzMnETQtJRKwhDbS2aA6/9mgOf/ZoDn/2aA6/9mg
        Of/ZoDn/2aA5/+GvVv/ZoDv/2aA5/9mgOv/ZoDn/2aA5/9mgOv/ZoDn/2aA5/9mgOf/Znzr/2Z85/9mf
        OP/isFf/2aA5/9mgOv/ZoDn/2aA6/9mgOv/Znzn/2aA5/9SiTuo6MicRMywmEq2AOdLVmzz/1Zo9/9Wa
        Pf/Vmj3/1Zo8/9WaPP/Vmz3/3qtZ/9WbPf/Vmj3/1Zo9/9WaPf/Vmj3/1Zs9/9WaPf/Vmj3/1Zo9/9Wa
        PP/Vmj3/1Zo8/9+sWv/Vmz3/1Zo9/9WaPf/Vmz3/1Zs9/9WbPf/Vmz3/0Z5R6joxKBEzLCcSq3070tKX
        QP/Sl0D/0pdA/9KXQP/Sl0D/0pdA/9KXQP/cqVz/05dB/9KXQP/Sl0D/0pdA/9KXQP/Sl0D/0pdA/9KX
        QP/Sl0D/0pdA/9KXQP/Slj//3ape/9KXQP/Sl0D/0pdA/9KXQP/Sl0D/0pdA/9KXQP/Om1PqOTEoETIs
        KRKofUPM26pl/+O9if/bqmX/0JRE/9CVRP/RlUX/0JRF/9unYP/QlUX/0JRF/9CURP/QlET/4LV6/9il
        X//QlET/0JRE/9CVRf/QlET/0JRE/9CURP/bqGH/0JRE/9GVRf/QlEX/0JRE/9CURP/QlUT/0JVE/8yZ
        Vuo5MCkRMispEqWbkbfq08H/1amH/+vWxP/lxp//z5NI/8+TSf/PlEn/2qdk/8+USf/Pk0j/z5NJ/+XD
        mP/kybL/8ODQ/9qsc//Pk0n/z5NJ/8+TSf/Pk0n/z5NI/9upZf/Pk0n/z5NJ/9GWTv/r0rb/79zG/9Oc
        WP/Pk0n/y5da6jkwKRExKikSk1s10rRrOf+0bDn/tGw6/+bMuP/etYb/zpJN/86STf/lwpn/7tvH/9Wj
        aP/TnmH/8ODQ/7ZvO/+9e0n/9ObX/9KZVf/PlE3/z5NN/86STf/Okk3/4rqJ/8+TTf/Okk3/6c2t/9Sp
        h//JlGv/7tnA/86STP/Kl13pOTAqETApJxKTWzXStGw5/7RsOf+0bDn/t3FA//Lj1f/Vomv/1qNs//nv
        5f/SnWD/9ejY//Hfx//arHX/yos+/8qLPv/gu47/7dOv/92rZv/cq2b/26lm/+XCmP/68+v/58qr/9em
        cf/u28r/tGs5/7RrOP/s2Mb/059m/8mWYOk4LyoRMCglEpRbNdK0bDn/unQ8/8OCQv/KjUb/2qx2//Xm
        0//v2Lr/79a4/86SSv/lxJz/7de8/86RSP/Okkn/zpJJ/8+UTP/37eD/4LR5/9+wcv/fsHD/9ejW/+C2
        hP/16Nj/9ebT/9utd//Ljkf/xIRC/9arhP/jw6H/yJVk6DcwLRExKScSmmQ50s2QTf/TmVP/0plT/9KZ
        Uv/SmFL/4ryO/+vRsf/esHr/05lU/9KYUv/SmFH/05lT/9KZUv/SmVP/0plT/+bHoP/t1LL/4bV8/+S7
        iP/159b/3q93/9yud//oyqb/0phS/9KZU//SmVP/1p9e//Xp3P+gfmDBOTMxEjIrKBKuhFHS1qBd/9ag
        Xf/XoF3/1qBd/9agXf/WoF3/1qBe/+G0gP/XoF7/1qBd/9agXf/XoF3/1qBd/9agXf/Wn13/2KRm//nw
        5v/ku4j/79e5/+jHof/htoL/1qBd/9agXf/Wn13/16Bd/9agXf/Wn1z/8+LO/7y2scA5MzESMy0qErGJ
        W9Lapmn/2qZo/9qmaP/apmn/2qZp/9qmaP/apmj/47qK/9qnaf/apmn/2qZp/9qnaP/apmn/2qdo/9qm
        aP/apmn/7dS3//Davv/58uj/3Ktw/+S8jP/ap2n/2qZo/9qmaf/apmj/2qZo/9qmaP/drXP/1ax+5Dk0
        MhE0LisSs45k0d2sdf/drHX/3ax1/92sdf/drXX/3ax1/92sdf/lv5T/3a12/92sdf/drHX/3ax1/92s
        df/drHX/3ax1/92sdf/esHv/9ejZ/+rLqP/drHT/5sCW/92sdf/drHX/3ax1/92sdf/drHX/3a11/92s
        dP/Uq33jOjUyEjQvLRK0km3N4bSA/+G0gP/hs4D/4bSA/+Gzf//hs4D/4bOA/+jFnv/gtID/4bOA/+C0
        gP/gs3//4bSA/+CzgP/hs4D/4bOA/+CzgP/gs3//4bOA/+Czf//pxqD/4bOA/+GzgP/htID/4LOA/+Gz
        gP/htID/4LOA/9WvheE7NDESNC8uErWWdMrjuYv/47mL/+O5i//juYv/47mL/+O5i//juYv/6sqn/+O5
        i//juIv/47mL/+O4i//juYv/47mL/+O5i//juYv/47mL/+O5i//juYv/47mK/+vLqP/juYv/47mL/+O5
        i//juYv/47iL/+O4i//juYv/1rON3zs1MhI2MS8Rtpl8xuW+lf/lvpX/5b6W/+W+lf/lvpb/5b6V/+W+
        lv/szq//5r6W/+W+lv/lvpX/5r6V/+W+lf/lvpb/5b6V/+W+lf/lvpX/5b6V/+W+lf/lvpX/7M+x/+W+
        lf/lvpX/5b6V/+W+lf/lvpX/5b6V/+W+lf/Xt5TdPDY0EUxEPw23nYPA58Sg/+fDoP/oxKD/6MSg/+jE
        oP/nw6D/58Og/+7TuP/oxKD/58Sg/+jEoP/nxKD/58Sg/+fEoP/nxKD/58Sg/+fEoP/oxKD/6MSg/+jD
        n//u07n/6MSg/+fEoP/oxKD/58Og/+jEoP/nxKD/58Sg/9i7ndlXTkcMcGNZBbGciKnpyav/6cmr/+nI
        qv/pyKv/6ciq/+nIq//pyKv/79bA/+nJq//pyKv/6cir/+nIq//pyKr/6cir/+nIq//pyKv/6cir/+nI
        q//pyKv/6ciq/+/Xwf/pyKv/6cir/+nIq//pyKr/6cmr/+nIq//pyKv/ybCZwYJzZgWlkYABrpyMWezP
        tv/rzrb/6863/+vOtv/rzrf/6863/+vOtv/w2sn/6863/+vOtv/rzrf/6863/+vOtv/rzrf/6863/+vO
        tv/rzrf/6862/+vOt//rzrb/8dvK/+vOt//rzrb/6862/+vOt//rzrf/6862/+vOtv/BrJpxAAAAAAAA
        AADDrpwH4826vO7Uwv/t1MH/7dTC/+3Twv/t1ML/7dTB//Le0f/t1ML/7dTB/+3Uwf/t1ML/7dTB/+3U
        wv/t08L/7dTB/+3Uwv/t08L/7dTB/+3Uwf/y39L/7dTC/+3Uwf/t1MH/7dTB/+3Uwf/t1MH/5c671s+5
        pw8AAAAAAAAAAAAAAADUwLAZ6tbIv/Dazv/w287/8NrO/+/azv/v2s7/79rO/+/azv/w2s7/79rO/+/a
        zv/v2s7/79rO/+/azv/v2s7/8NrO/+/azv/v2s7/79rO/+/azv/v2s7/79rO/+/azv/w287/8NrN/+/a
        zNDax7giAAAAAAAAAAAAAAAAAAAAAAAAAADgzcAD6djNTvLh2Jjy4dif8uHXn/Lh2J/y4def8uHXn/Lh
        15/y4def8uHYn/Lh15/x4def8uHYn/Lh15/y4def8uHXn/Hh2J/y4dif8uHXn/Hg2J/x4dif8uHXn/Li
        2J3s29Be59THCAAAAAAAAAAAAAAAAOAAAA/AAAADgAAAAYAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABgAAAAcAAAAPgAAAH
</value>
  </data>
</root>